{"name": "Негативные проверки валидации email", "status": "failed", "statusDetails": {"message": "AssertionError: Locator expected to be disabled\nActual value: enabled \nCall log:\n  - LocatorAssertions.to_be_disabled with timeout 5000ms\n  -   - waiting for get_by_role(\"button\", name=\"Sign up\")\n  -     9 × locator resolved to <button class=\"flex items-center justify-center gap-1 font-redHat whitespace-nowrap rounded-2xl px-4 py-1 border border-transparent transition-[color,width,margin,gap,transform] focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 min-h-[50px] duration-200 shadow-shadow active:shadow-pressedButton w-full bg-purple text-lg font-medium text-white !shadow-none hover:bg-purple2 min-w-fit\">Sign up</button>\n  -       - unexpected value \"enabled\"", "trace": "self = <test_login.TestEmailRegistration object at 0x000001DC4028DA50>, invalid_email = 'user@example.com'\n\n    @allure.title(\"Негативные проверки валидации email\")\n    @pytest.mark.parametrize(\n        \"invalid_email\", [(\"   \"), (\"invalid\"), (\"test@test.com\"), (\"user@example.com\")]\n    )\n    @pytest.mark.critical\n    def test_invalid_email_registration(self, invalid_email):\n        \"\"\"Тест валидации email\"\"\"\n        with allure.step(\"Проверяем, что кнопка заблокирована по умолчанию\"):\n>           expect(self.login_page.sign_up_button).to_be_disabled()\nE           AssertionError: Locator expected to be disabled\nE           Actual value: enabled \nE           Call log:\nE             - LocatorAssertions.to_be_disabled with timeout 5000ms\nE             -   - waiting for get_by_role(\"button\", name=\"Sign up\")\nE             -     9 × locator resolved to <button class=\"flex items-center justify-center gap-1 font-redHat whitespace-nowrap rounded-2xl px-4 py-1 border border-transparent transition-[color,width,margin,gap,transform] focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 min-h-[50px] duration-200 shadow-shadow active:shadow-pressedButton w-full bg-purple text-lg font-medium text-white !shadow-none hover:bg-purple2 min-w-fit\">Sign up</button>\nE             -       - unexpected value \"enabled\"\n\ntests\\test_login.py:139: AssertionError"}, "description": "Тест валидации email", "steps": [{"name": "Проверяем, что кнопка заблокирована по умолчанию", "status": "failed", "statusDetails": {"message": "AssertionError: Locator expected to be disabled\nActual value: enabled \nCall log:\n  - LocatorAssertions.to_be_disabled with timeout 5000ms\n  -   - waiting for get_by_role(\"button\", name=\"Sign up\")\n  -     9 × locator resolved to <button class=\"flex items-center justify-center gap-1 font-redHat whitespace-nowrap rounded-2xl px-4 py-1 border border-transparent transition-[color,width,margin,gap,transform] focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 min-h-[50px] duration-200 shadow-shadow active:shadow-pressedButton w-full bg-purple text-lg font-medium text-white !shadow-none hover:bg-purple2 min-w-fit\">Sign up</button>\n  -       - unexpected value \"enabled\"\n\n", "trace": "  File \"E:\\IT\\AQA\\ai_lawyer\\tests\\test_login.py\", line 139, in test_invalid_email_registration\n    expect(self.login_page.sign_up_button).to_be_disabled()\n  File \"E:\\IT\\AQA\\ai_lawyer\\env\\lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 20004, in to_be_disabled\n    self._sync(self._impl_obj.to_be_disabled(timeout=timeout))\n  File \"E:\\IT\\AQA\\ai_lawyer\\env\\lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n  File \"E:\\IT\\AQA\\ai_lawyer\\env\\lib\\site-packages\\playwright\\_impl\\_assertions.py\", line 568, in to_be_disabled\n    await self._expect_impl(\n  File \"E:\\IT\\AQA\\ai_lawyer\\env\\lib\\site-packages\\playwright\\_impl\\_assertions.py\", line 74, in _expect_impl\n    raise AssertionError(\n"}, "start": 1744551187816, "stop": 1744551192843}], "attachments": [{"name": "log", "source": "860553ca-fa69-4f99-ace4-acaeeec08e56-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "invalid_email", "value": "'user@example.com'"}], "start": 1744551187815, "stop": 1744551192843, "uuid": "61da6ca8-4989-4188-9c67-d1145776a34e", "historyId": "695dc9e3b215a3ab23e2c5600c8329c7", "testCaseId": "fc69cec70486f9c6477a032694827d4b", "fullName": "tests.test_login.TestEmailRegistration#test_invalid_email_registration", "labels": [{"name": "feature", "value": "Регистрация по email"}, {"name": "tag", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestEmailRegistration"}, {"name": "host", "value": "DESKTOP-7NMG6HA"}, {"name": "thread", "value": "13572-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}